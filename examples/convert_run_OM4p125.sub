#!/bin/bash
#SBATCH -p analysis
#SBATCH -t 48:00:00

set -x
umask 022

historydir=/archive/Raphael.Dussin/xanadu_esm4_20190304_mom6_2019.12.16/OM4p125_JRA55do1.4_mle3d_cycle1/gfdl.ncrc4-intel16-prod/history
outputdir=/archive/Raphael.Dussin/xanadu_esm4_20190304_mom6_2019.12.16/OM4p125_JRA55do1.4_mle3d_cycle1/gfdl.ncrc4-intel16-prod/zstore
fyear=1971
lyear=2018

# make sure valid platform and required modules are loaded
if [ $( gfdl_platform ) == hpcs-csc ] ; then
   . $MODULESHOME/init/bash
   module use -a /home/Raphael.Dussin/modulefiles
   module purge
   module load condaenv/base
   . /work/Raphael.Dussin/anaconda3/etc/profile.d/conda.sh
   conda activate myzarr
else
   echo "ERROR: invalid platform"
   exit 1
fi

if [ ! -d $outputdir ] ; then mkdir $outputdir ; fi

# check for waiting/processed jobs
if [ ! -d $outputdir/nextinline ] ; then mkdir -p $outputdir/nextinline ; fi

for year in $( seq $fyear $lyear ) ; do

  # if year has not been processed, put it in the line
  if [ ! -f $outputdir/nextinline/$year.thankyounext ] ; then touch $outputdir/nextinline/$year.inline ; fi

done

# default is not resubmission unless something is processed
resubmit=0
for year in $( seq $fyear $lyear ) ; do

  # check processed items (years)
  if [ -f $outputdir/nextinline/$year.thankyounext ] ; then echo year $year has been processed ; fi
  # first item found sequentially is processed, break loop and set to resubmit
  if [ -f $outputdir/nextinline/$year.inline ] ; then echo processing year $year ; resubmit=1 ; break ; fi

done

# year is now the value when we broke out of the loop
# double-check item needs processing and run conversion
if [ -f $outputdir/nextinline/$year.inline ] ; then

  cyear=${year}0101
  job_uuid=$(uuidgen)
  mkdir $TMPDIR/${job_uuid}
  sleep 1
  history_tar_to_zarr.py -i $historydir/$cyear.nc.tar -o $outputdir -w $TMPDIR/${job_uuid} -s zip -d OM4p125 -S gfdl -I iceberg_trajectories

  # save state of conversion success/failure
  if [ $? == 0 ] ; then successful=1 ; else successful=0 ; resubmit=0 ; fi

  # if success, set flag as done and move on to the next one
  if [ $successful == 1 ] ; then mv $outputdir/nextinline/$year.inline $outputdir/nextinline/$year.thankyounext ; fi

fi

# if needed, resubmit the script (will work on next one in line)
if [ $resubmit == 1 ] ; then
  here=$( pwd )
  subscript=convert_run_OM4p125.sub
  module load slurm
  cd $here
  sbatch $here/$subscript
fi

